
 FUNCTIONAL JAVASCRIPT IS GOOD
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 Basic: Filter
 Exercise 4 of 18


# Task

Use Array#filter to write a function called getShortMessages.

getShortMessages takes an array of objects with '.message' properties and returns an array of messages that are less than < 50 characters long.

The function should return an array containing the messages themselves, without their containing object.

## Arguments

  * messages: an Array of 10 to 100 random objects that look something like this:

    [33m{[39m
      [37mmessage[39m[93m:[39m [92m'Esse id amet quis eu esse aute officia ipsum.'[39m [90m// random[39m
    [33m}[39m

## Conditions

  * Do not use any for/while loops or Array#forEach.
  * Do not create any unnecessary functions e.g. helpers.

## Hint

  * Try chaining some Array methods!

## Example

    [33m[[39m [92m'Tempor quis esse consequat sunt ea eiusmod.'[39m[32m,[39m
      [92m'Id culpa ad proident ad nulla laborum incididunt.'[39m[32m,[39m
      [92m'Ullamco in ea et ad anim anim ullamco est.'[39m[32m,[39m
      [92m'Est ut irure irure nisi.'[39m [33m][39m

## Resources

  * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter
  * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map

## Boilerplate

    [94mfunction[39m [37mgetShortMessages[39m[90m([39m[37mmessages[39m[90m)[39m [33m{[39m
      [90m// SOLUTION GOES HERE[39m
    [33m}[39m
    
    [37mmodule[39m[32m.[39m[37mexports[39m [93m=[39m [37mgetShortMessages[39m


 Â» To print these instructions again, run: functional-javascript print
 Â» To execute your program in a test environment, run: functional-javascript run program.js
 Â» To verify your program, run: functional-javascript verify program.js
 Â» For help run: functional-javascript help


